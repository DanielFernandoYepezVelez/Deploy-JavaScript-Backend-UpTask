{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/services/login.service.ts","./src/app/auth/services/register.service.ts","./src/app/guards/auth.guard.ts","./src/app/page404/page404.component.ts","./src/app/page404/page404.component.html","./src/app/pages/components/progress/progress.component.ts","./src/app/pages/components/progress/progress.component.html","./src/app/pages/components/project-update/project-update.component.ts","./src/app/pages/components/project-update/project-update.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/landing-page.component.ts","./src/app/pages/landing-page.component.html","./src/app/pages/models/project.model.ts","./src/app/pages/models/task.model.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.module.ts","./src/app/pages/projects/projects.component.ts","./src/app/pages/projects/projects.component.html","./src/app/pages/services/project.service.ts","./src/app/pages/services/task.service.ts","./src/app/pages/tasks/tasks.component.ts","./src/app/pages/tasks/tasks.component.html","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/shared.module.ts","./src/app/shared/sidebar/sidebar.component.ts","./src/app/shared/sidebar/sidebar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n/* Routing Modules(childs) */\r\nimport { PagesRoutingModule } from './pages/pages-routing.module';\r\nimport { AuthRoutingModule } from './auth/auth-routing.module';\r\n\r\n/* Components */\r\nimport { Page404Component } from './page404/page404.component';\r\n\r\nconst routes: Routes = [\r\n  /* path: '/dashboard' PagesRouting */\r\n  /* path: '/auth' AuthRouting */\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n  { path: '**', component: Page404Component }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    PagesRoutingModule,\r\n    AuthRoutingModule\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'FrontendUpTaskTypeScript';\r\n}\r\n","<div>\r\n    <router-outlet></router-outlet>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n/* Routing Modules */\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n/* Component Modules */\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\n/* Components */\r\nimport { AppComponent } from './app.component';\r\nimport { Page404Component } from './page404/page404.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    Page404Component,\r\n  ],\r\n  imports: [\r\n    AuthModule,\r\n    PagesModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n/* Components */\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n/* Components */\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  exports: [LoginComponent, RegisterComponent],\r\n})\r\nexport class AuthModule {}\r\n","import Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit, NgZone } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n/* Services */\r\nimport { LoginService } from '../services/login.service';\r\n\r\n/* Constante De Google */\r\ndeclare const gapi: any;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['../css/auth.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  /**\r\n   * Variable De Google\r\n   */\r\n  private auth2: any;\r\n\r\n  /**\r\n   * Document Object Model\r\n   */\r\n  private inputs: HTMLCollectionBase;\r\n  private labels: HTMLCollectionBase;\r\n\r\n  /**\r\n   * Generals Logics Properties\r\n   */\r\n  public validateOne = false;\r\n  public validateTwo = false;\r\n  public validateFour = false;\r\n  public formForma: FormGroup;\r\n  public validateThree = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    private formBuilder: FormBuilder,\r\n    private loginService: LoginService,\r\n  ) {\r\n    this.loginFormDataBuild();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    Array.from((this.inputs = document.querySelectorAll('.main__form input')));\r\n    Array.from((this.labels = document.querySelectorAll('.main__form label')));\r\n    this.emailPositionInitialRemember();\r\n    /* Prepara El Boton Con Su Id Para Iniciar La Authenticación De Google(IMPORTANTE!!) */\r\n    this.startApp();\r\n  }\r\n\r\n  /**\r\n   * Input Field Email Position Inital Remember\r\n   */\r\n  private emailPositionInitialRemember(): void {\r\n    if (this.formForma.get('email').value) {\r\n      this.fieldValueTransitionLabel(\r\n        this.formForma.get('email').value,\r\n        0,\r\n        'label__finally'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Input Field Event DOM\r\n   */\r\n  public input(e): void {\r\n    const value: string = e.target.value;\r\n    const attribute: string = e.target.getAttribute('type');\r\n\r\n    switch (attribute) {\r\n      case 'email':\r\n        this.fieldValueTransitionLabel(value, 0, 'label__finally');\r\n        break;\r\n\r\n      case 'password':\r\n        this.fieldValueTransitionLabel(value, 1, 'label__finally');\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login Form Transition Label\r\n   */\r\n  private fieldValueTransitionLabel(\r\n    value: string,\r\n    index: number,\r\n    classCss: string\r\n  ): void {\r\n    if (value.length) {\r\n      this.labels[index].classList.add(classCss);\r\n    } else {\r\n      this.labels[index].classList.remove(classCss);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login Form Data Build (ANGULAR)\r\n   */\r\n  private loginFormDataBuild(): void {\r\n    this.formForma = this.formBuilder.group({\r\n      email: [\r\n        localStorage.getItem('email') || '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(\r\n            /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n          ),\r\n        ],\r\n      ],\r\n      password: ['', [Validators.required, Validators.minLength(4)]],\r\n      remember: [false],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Login Form Get Data And Send To Server\r\n   */\r\n  public loginFormDataSaved(): void {\r\n    if (\r\n      this.formForma.status === 'INVALID' ||\r\n      this.formForma.dirty === false ||\r\n      this.formForma.valid === false\r\n    ) {\r\n      Object.values(this.formForma.controls).forEach((controlsField, index) => {\r\n        if (\r\n          controlsField.status === 'INVALID' ||\r\n          controlsField.valid === false\r\n        ) {\r\n          this.inputs[index].classList.add('borderInput');\r\n          this.validateTwo = this.generalConditional('email');\r\n          this.validateFour = this.generalConditional('password');\r\n        }\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    /* Response Backend */\r\n    this.loginService.login(this.formForma.value).subscribe(\r\n      () => {\r\n        this.savedRememberLocalStorage();\r\n        this.router.navigateByUrl('/dashboard');\r\n      },\r\n      (error) => this.showAlertError(error.error.error)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Guardar Email En El LocalStorage Si El Usuario Lo Desea\r\n   */\r\n  private savedRememberLocalStorage(): void {\r\n    if (this.formForma.get('remember').value) {\r\n      localStorage.setItem('email', this.formForma.get('email').value);\r\n    } else {\r\n      localStorage.removeItem('email');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mostrar Mensaje De Error Si Existe En La Respuesta Del Backend\r\n   */\r\n  private showAlertError(message: string): void {\r\n    Swal.fire({ icon: 'error', title: 'Oops...', text: message });\r\n  }\r\n\r\n  /**\r\n   * Login Form Validate Every Input Value\r\n   */\r\n  public validateInput(inputName: string): void {\r\n    switch (inputName) {\r\n      case 'email':\r\n        if (this.generalConditionalThird('email')) {\r\n          this.validateOne = false;\r\n          this.validateTwo = false;\r\n          this.inputs[0].classList.remove('borderInput');\r\n        }\r\n\r\n        if (!this.validateTwo) {\r\n          this.validateOne = this.generalConditionalSecond('email');\r\n\r\n          if (this.validateOne) {\r\n            this.inputs[0].classList.add('borderInput');\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'password':\r\n        if (this.generalConditionalThird('password')) {\r\n          this.validateThree = false;\r\n          this.validateFour = false;\r\n          this.inputs[1].classList.remove('borderInput');\r\n        }\r\n\r\n        if (!this.validateFour) {\r\n          this.validateThree = this.generalConditionalSecond('password');\r\n\r\n          if (this.validateThree) {\r\n            this.inputs[1].classList.add('borderInput');\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Big And General Conditional One (VALIDATION INPUT)\r\n   */\r\n  private generalConditional(inputName: string): boolean {\r\n    return (\r\n      this.formForma.get(inputName).status === 'INVALID' &&\r\n      !this.formForma.get(inputName).dirty &&\r\n      this.formForma.get(inputName).untouched &&\r\n      !this.formForma.get(inputName).valid\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Big And General Conditional Second (VALIDATION INPUT)\r\n   */\r\n  private generalConditionalSecond(inputName: string): boolean {\r\n    return (\r\n      this.formForma.get(inputName).status === 'INVALID' &&\r\n      this.formForma.get(inputName).dirty &&\r\n      !this.formForma.get(inputName).valid\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Big And General Conditional Third (VALIDATION INPUT)\r\n   */\r\n  private generalConditionalThird(inputName: string): boolean {\r\n    return (\r\n      this.formForma.get(inputName).status === 'VALID' &&\r\n      this.formForma.get(inputName).valid\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Frontend Google Sign In Logic (Boton Personalizado)\r\n   * Las Arrow Functions Las Implemento Para Que No Cambien El This(Contexto) De Las Funciones\r\n   */\r\n  private startApp(): void {\r\n    gapi.load('auth2', () => {\r\n      this.auth2 = gapi.auth2.init({\r\n        client_id:\r\n          '24949782543-ks08iocf3mi3tko0gn8ilpgspmb5rtcg.apps.googleusercontent.com',\r\n        cookiepolicy: 'single_host_origin',\r\n      });\r\n\r\n      this.attachSignin(document.getElementById('googleBtn'));\r\n    });\r\n  }\r\n\r\n  private attachSignin(element) {\r\n    this.auth2.attachClickHandler(\r\n      element,\r\n      {},\r\n      (googleUser) => {\r\n        const { id_token } = googleUser.getAuthResponse();\r\n\r\n        this.loginService.loginGoogle(id_token).subscribe(() => {\r\n          this.ngZone.run(() => {\r\n            this.router.navigateByUrl('/dashboard');\r\n          });\r\n        });\r\n      },\r\n      (error) => {\r\n        alert(JSON.stringify(error, undefined, 2));\r\n      }\r\n    );\r\n  }\r\n}\r\n","<article class=\"article__auth--container animated fadeIn fast\">\r\n    <section class=\"auth__container\">\r\n        <header class=\"auth__header\">\r\n            <figure class=\"auth__figure\">\r\n                <img class=\"auth__image\" src=\"./assets/image/logo.png\" alt=\"logoauth\">\r\n            </figure>\r\n            <p class=\"auth__paragraph\">UpTask - Administrador De Proyectos</p>\r\n        </header>\r\n\r\n        <main>\r\n            <article class=\"main__auth\">\r\n                <h2 class=\"main__h2\">Inicia Sesión</h2>\r\n\r\n                <form autocomplete=\"off\" class=\"main__form\" [formGroup]=\"formForma\" (ngSubmit)=\"loginFormDataSaved()\">\r\n                    <div class=\"campo\">\r\n                        <input type=\"email\" (change)=\"input($event)\" (input)=\"validateInput('email')\" formControlName=\"email\">\r\n                        <label>Correo Electrónico</label>\r\n                        <small *ngIf=\"validateOne\">Correo Electrónico No Válido</small>\r\n                        <small *ngIf=\"validateTwo\">Correo Electrónico Obligatorio</small>\r\n                    </div>\r\n\r\n                    <div class=\"campo\">\r\n                        <input type=\"password\" (change)=\"input($event)\" (input)=\"validateInput('password')\" formControlName=\"password\">\r\n                        <label>Contraseña</label>\r\n                        <small *ngIf=\"validateThree\">Contraseña No Válida</small>\r\n                        <small *ngIf=\"validateFour\">Contraseña Obligatoria</small>\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Iniciar Sesión</button>\r\n                </form>\r\n\r\n                <div class=\"main__remember\">\r\n                    <form [formGroup]=\"formForma\">\r\n                        <input type=\"checkbox\" formControlName=\"remember\"> <span> Recuérdame</span>\r\n                    </form>\r\n                    <!-- <p class=\"main__password \"><a>¿Olvidé Mi Contraseña?</a></p> -->\r\n                </div>\r\n\r\n                <div class=\"main__auth2 \">\r\n                    <p id=\"googleBtn\"><i class=\"fab fa-google \"></i><a>Inicia Sesión Con Google</a></p>\r\n                    <!-- <p><i class=\"fab fa-facebook \"></i><a>Inicia Sesión Con Facebook</a></p>\r\n                    <p><i class=\"fab fa-twitter \"></i><a>Inicia Sesión Con Twitter</a></p> -->\r\n                </div>\r\n\r\n                <p class=\"register \">No Tienes Ninguna Cuenta <a [routerLink]=\"[ '/register'] \">Regístrate</a></p>\r\n            </article>\r\n        </main>\r\n    </section>\r\n</article>","import Swal from 'sweetalert2';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n/* Services */\r\nimport { RegisterService } from '../services/register.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['../css/auth.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  /**\r\n   * Document Object Model\r\n   */\r\n  private labels: HTMLCollectionBase;\r\n  private inputs: HTMLCollectionBase;\r\n\r\n  /**\r\n   * Register Form Data Append\r\n   */\r\n  public formForma: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private registerService: RegisterService,\r\n    private router: Router\r\n  ) {\r\n    this.registerFormCreate();\r\n  }\r\n\r\n  /**\r\n   * HTML Builder After\r\n   */\r\n  ngOnInit(): void {\r\n    Array.from((this.labels = document.querySelectorAll('.main__form label')));\r\n    Array.from((this.inputs = document.querySelectorAll('.main__form input')));\r\n  }\r\n\r\n  /**\r\n   * Event Inputs Transition Labels\r\n   */\r\n  public input(e): void {\r\n    const value: string = e.target.value;\r\n    // const attribute: string = e.target.getAttribute('type');\r\n    const attribute: string = e.target.getAttribute('formControlName');\r\n\r\n    switch (attribute) {\r\n      case 'name':\r\n        this.fieldValueTransitionLabel(value, 0, 'label__finally');\r\n        break;\r\n\r\n      case 'email':\r\n        this.fieldValueTransitionLabel(value, 1, 'label__finally');\r\n        break;\r\n\r\n      case 'password':\r\n        this.fieldValueTransitionLabel(value, 2, 'label__finally');\r\n        break;\r\n\r\n      case 'repeat_password':\r\n        this.fieldValueTransitionLabel(value, 3, 'label__finally');\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register Form Label Transition\r\n   */\r\n  private fieldValueTransitionLabel(\r\n    value: string,\r\n    index: number,\r\n    classCss: string\r\n  ): void {\r\n    if (value.length) {\r\n      this.labels[index].classList.add(classCss);\r\n    } else {\r\n      this.labels[index].classList.remove(classCss);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register Form Data Builder And Validation (ANGULAR REACTIVE)\r\n   */\r\n  private registerFormCreate(): void {\r\n    this.formForma = this.formBuilder.group(\r\n      {\r\n        name: ['', [Validators.required, Validators.minLength(3)]],\r\n        email: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.pattern(\r\n              /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            ),\r\n          ],\r\n        ],\r\n        password: ['', [Validators.required, Validators.minLength(4)]],\r\n        repeat_password: ['', [Validators.required, Validators.minLength(4)]],\r\n      },\r\n      {\r\n        validators: this.statusFieldPasswords('password', 'repeat_password'),\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Los Validadores Sincronos Deben Retornar Una Function, Asi Funcionan\r\n   * Los Passwords Se Validan A Nivel De Formulario\r\n   * Recibimos En El Parametro Todo El Formulario\r\n   * Hacemos La Lógica Para Validar Ambos Passwords, Antes De Enviar La Data\r\n   */\r\n  private statusFieldPasswords(pass1Name: string, pass2Name: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const pass1Control = formGroup.controls[pass1Name];\r\n      const pass2Control = formGroup.controls[pass2Name];\r\n\r\n      if (pass1Control.value === pass2Control.value) {\r\n        pass2Control.setErrors(null);\r\n      } else {\r\n        pass2Control.setErrors({ noEsIgual: true });\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Register Form Every Field Value (ANGULAR REACTIVE)\r\n   */\r\n  public statusField(e): void {\r\n    const attribute: string = e.target.getAttribute('formControlName');\r\n\r\n    switch (attribute) {\r\n      case 'name':\r\n        this.validationTemplateLogicInput(\r\n          'name',\r\n          0,\r\n          'borderInput',\r\n          'Nombre No Válido'\r\n        );\r\n        break;\r\n\r\n      case 'email':\r\n        this.validationTemplateLogicInput(\r\n          'email',\r\n          1,\r\n          'borderInput',\r\n          'Correo Eléctronico No Válido'\r\n        );\r\n        break;\r\n\r\n      case 'password':\r\n        this.validationTemplateLogicInput(\r\n          'password',\r\n          2,\r\n          'borderInput',\r\n          'Contraseña No Válida'\r\n        );\r\n        break;\r\n\r\n      case 'repeat_password':\r\n        this.validationTemplateLogicInput(\r\n          'repeat_password',\r\n          3,\r\n          'borderInput',\r\n          'Contraseñas No Son Iguales'\r\n        );\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register Form Validate Input Logic\r\n   */\r\n  private validationTemplateLogicInput(\r\n    fieldName: string,\r\n    index: number,\r\n    classCss: string,\r\n    message: string = ''\r\n  ): void {\r\n    // tslint:disable-next-line: max-line-length\r\n    if (\r\n      this.formForma.get(fieldName).status === 'VALID' &&\r\n      this.formForma.get(fieldName).dirty &&\r\n      !this.formForma.get(fieldName).invalid &&\r\n      this.formForma.get(fieldName).valid\r\n    ) {\r\n      if (\r\n        this.labels[index].nextElementSibling ||\r\n        this.inputs[index].classList.contains(classCss)\r\n      ) {\r\n        this.inputs[index].classList.remove(classCss);\r\n        this.registerFormTemplateValidate(index);\r\n      }\r\n    } else if (\r\n      !this.formForma.get(fieldName).valid &&\r\n      this.formForma.get(fieldName).dirty\r\n    ) {\r\n      if (\r\n        !this.labels[index].nextElementSibling ||\r\n        !this.inputs[index].classList.contains(classCss)\r\n      ) {\r\n        this.inputs[index].classList.add(classCss);\r\n        this.registerFormTemplateValidate(index, message);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register Form Data Saved And Send Server\r\n   * Register Form All Data\r\n   */\r\n  public saveRegisterFormData(): void {\r\n    // tslint:disable-next-line: max-line-length\r\n    if (\r\n      this.formForma.status === 'INVALID' ||\r\n      this.formForma.touched === false ||\r\n      this.formForma.dirty === false ||\r\n      this.formForma.valid === false\r\n    ) {\r\n      this.completeFormValidate();\r\n      return;\r\n    }\r\n\r\n    /* Response Backend */\r\n    this.registerService.createUser(this.formForma.value).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl('/login');\r\n      },\r\n      (error) => this.showAlertError(error.error.error)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Show Alert Errors Response Backend, If Exist!\r\n   */\r\n  private showAlertError(message: string): void {\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: message,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register Form Every Field Validate Controls\r\n   */\r\n  private completeFormValidate(): void {\r\n    Object.values(this.formForma.controls).forEach((controlsField, index) => {\r\n      if (controlsField.status === 'INVALID' || controlsField.valid === false) {\r\n        this.inputs[index].classList.add('borderInput');\r\n        this.registerFormPositionValidate(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register Form Position Field Validate\r\n   */\r\n  private registerFormPositionValidate(index: number): void {\r\n    if (index === 0) {\r\n      this.registerFormTemplateValidate(index, 'Nombre Obligatorio');\r\n    } else if (index === 1) {\r\n      this.registerFormTemplateValidate(\r\n        index,\r\n        'Correo Eléctronico Obligatorio'\r\n      );\r\n    } else if (index === 2) {\r\n      this.registerFormTemplateValidate(index, 'Contraseña Obligatoria');\r\n    } else if (index === 3) {\r\n      this.registerFormTemplateValidate(index, 'Contraseñas No Son Iguales');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register Form Template Builder Validate HTML\r\n   */\r\n  private registerFormTemplateValidate(\r\n    index: number,\r\n    mensajeValidate: string = ''\r\n  ): void {\r\n    const small = document.createElement('small');\r\n\r\n    if (!this.labels[index].nextElementSibling) {\r\n      small.style.color = '#f50808';\r\n      small.innerHTML = mensajeValidate;\r\n      this.inputs[index].nextElementSibling.insertAdjacentElement(\r\n        'afterend',\r\n        small\r\n      );\r\n    } else if (\r\n      this.labels[index].nextElementSibling &&\r\n      !this.inputs[index].classList.contains('borderInput')\r\n    ) {\r\n      this.labels[index].nextElementSibling.remove();\r\n    }\r\n  }\r\n}\r\n","<article class=\"article__auth--container animated fadeIn fast\">\r\n    <section class=\"auth__container\">\r\n        <header class=\"auth__header\">\r\n            <figure class=\"auth__figure\">\r\n                <img class=\"auth__image\" src=\"./assets/image/logo.png\" alt=\"logoauth\">\r\n            </figure>\r\n            <p class=\"auth__paragraph\">UpTask - Administrador De Proyectos</p>\r\n        </header>\r\n\r\n        <main>\r\n            <article class=\"main__auth\">\r\n                <h2 class=\"main__h2\">Crear Cuenta</h2>\r\n\r\n                <form autocomplete=\"off\" class=\"main__form\" [formGroup]=\"formForma\" (ngSubmit)=\"saveRegisterFormData()\">\r\n                    <div class=\"campo\">\r\n                        <input type=\"text\" (blur)=\"input($event)\" (input)=\"statusField($event)\" formControlName=\"name\">\r\n                        <label>Nombre</label>\r\n                    </div>\r\n\r\n                    <div class=\"campo\">\r\n                        <input type=\"email\" (change)=\"input($event)\" (input)=\"statusField($event)\" formControlName=\"email\">\r\n                        <label>Correo Electrónico</label>\r\n                    </div>\r\n\r\n                    <div class=\"campo\">\r\n                        <input type=\"password\" (change)=\"input($event)\" (input)=\"statusField($event)\" formControlName=\"password\">\r\n                        <label>Contraseña</label>\r\n                    </div>\r\n\r\n                    <div class=\"campo\">\r\n                        <input type=\"password\" (blur)=\"input($event)\" (input)=\"statusField($event)\" formControlName=\"repeat_password\">\r\n                        <label>Repetir Contraseña</label>\r\n                    </div>\r\n\r\n                    <button type=\"submit\">Registrarse</button>\r\n                </form>\r\n\r\n                <div class=\"main__remember\">\r\n                    <p class=\"main__password\"><a [routerLink]=\"['/login']\">¿Ya Tienes Una Cuenta?</a></p>\r\n                </div>\r\n\r\n                <!-- <div class=\"main__auth2\">\r\n                    <p><i class=\"fab fa-twitter\"></i> <a href=\"#\">Visitanos En Twitter</a></p>\r\n                    <p><i class=\"fab fa-instagram\"></i> <a href=\"#\">Visitanos En Instagram</a></p>\r\n                    <p><i class=\"fab fa-youtube\"></i> <a href=\"#\">Visitanos En Youtube</a></p>\r\n                </div> -->\r\n            </article>\r\n        </main>\r\n    </section>\r\n</article>\r\n\r\n<!-- <pre>\r\n    campo: {{formForma.get('password').valid}}\r\n    campo: {{formForma.get('repeat_password').valid}}\r\n    Estado Del Formulario: {{formForma.valid}}\r\n    Estatus Del Formulario: {{formForma.status}}\r\n    Estatus Del Formulario: {{formForma.value | json }}\r\n</pre> -->","import { Observable, of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, NgZone } from '@angular/core';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\n/* Interfaces */\r\nimport { ILogin } from '../interfaces/login.interface';\r\n\r\n/* Variables De Entorno */\r\nimport { environment } from '../../../environments/environment';\r\n\r\n/* Project Model(For All Project) */\r\nimport { Project } from '../../pages/models/project.model';\r\n\r\n/* Variables Google */\r\ndeclare const gapi: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  private auth2: any;\r\n  public projects: Project;\r\n  private url: string = environment.baseUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private ngZone: NgZone\r\n  ) {}\r\n\r\n  /**\r\n   * User Login Normal\r\n   */\r\n  public login(formData: ILogin): Observable<any> {\r\n    const { email, password } = formData;\r\n    const loginForm = { email, password };\r\n\r\n    return this.http\r\n      .post(`${this.url}/login`, loginForm)\r\n      .pipe(tap((resp: any) => localStorage.setItem('token', resp.token)));\r\n  }\r\n\r\n  /**\r\n   * User Login Google\r\n   */\r\n  public loginGoogle(token: string): Observable<any> {\r\n    return this.http\r\n      .post(`${this.url}/login/google`, { token })\r\n      .pipe(\r\n        tap((resp: any) => localStorage.setItem('token', resp.tokenPropio))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Validate Token LocalStorage And Renew\r\n   * LOGICA PARA UN SERVICIO SINGLETON Y EL NOMBRE DE LOS PROYECTOS\r\n   */\r\n  public loginRenew(): Observable<boolean> {\r\n    const token: string = localStorage.getItem('token') || '';\r\n\r\n    return this.http\r\n      .get(`${this.url}/login/renew`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .pipe(\r\n        tap((resp: any) => {\r\n          const projectIds: number[] = [];\r\n          const projectUrls: string[] = [];\r\n          const projectNames: string[] = [];\r\n\r\n          localStorage.setItem('token', resp.tokenValidado);\r\n          resp.projects.forEach((project) => {\r\n            const { id, url, name } = project;\r\n\r\n            projectIds.push(id);\r\n            projectUrls.push(url);\r\n            projectNames.push(name);\r\n          });\r\n\r\n          this.projects = new Project(projectIds, projectUrls, projectNames);\r\n        }),\r\n        map(() => true),\r\n        catchError(() => of(false))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Logout De Google - Delete Token LocalStorage\r\n   */\r\n  public logout(): void {\r\n    this.auth2 = gapi.auth2.getAuthInstance();\r\n\r\n    this.auth2.signOut().then(() => {\r\n      this.ngZone.run(() => {\r\n        localStorage.removeItem('token');\r\n        this.router.navigate(['/login']);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/* Interfaces */\r\nimport { IRegister } from '../interfaces/register.interface';\r\n\r\n/* Variables De Entorno */\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RegisterService {\r\n  private url: string = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public createUser(formRegister: IRegister) {\r\n    return this.http.post(`${this.url}/register`, formRegister);\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\n\r\n/* Services */\r\nimport { LoginService } from '../auth/services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private loginService: LoginService, private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> {\r\n    return this.loginService\r\n      .loginRenew()\r\n      .pipe(\r\n        tap((authenticate: boolean) =>\r\n          !authenticate ? this.router.navigateByUrl('/login') : authenticate\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page404',\r\n  templateUrl: './page404.component.html',\r\n  styleUrls: ['./page404.component.css'],\r\n})\r\nexport class Page404Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"container__404\">\r\n    <header class=\"header\">\r\n        <h2>404 NOT FOUND</h2>\r\n    </header>\r\n\r\n    <main>\r\n        <article class=\"main__article\">\r\n            <section>\r\n                <figure class=\"main__image\">\r\n                    <img src=\"./assets/image/Scarecrow.png\" alt=\"mainImage\">\r\n                </figure>\r\n            </section>\r\n\r\n            <section class=\"main__section\">\r\n                <h1>I Have Bad News For You</h1>\r\n                <p class=\"section__paragraph\">The Page You Are Looking For Might Be Removed Or Is Temporarily Unavailable</p>\r\n\r\n                <div class=\"section__bottom\">\r\n                    <a [routerLink]=\"['/dashboard']\">Back To Home Page</a>\r\n                </div>\r\n            </section>\r\n        </article>\r\n    </main>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n/* Services */\r\nimport { TaskService } from '../../services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-progress',\r\n  templateUrl: './progress.component.html',\r\n  styleUrls: ['./progress.component.css'],\r\n})\r\nexport class ProgressComponent {\r\n  private valueTask = 0;\r\n\r\n  get valueFinal(): number {\r\n    let acSuma = 0;\r\n    this.valueTask = 0;\r\n\r\n    this.taskService.task?.taskStates.forEach((elemento) => {\r\n      if (elemento === 1) {\r\n        acSuma += 1;\r\n        this.valueTask =\r\n          (acSuma * 100) / this.taskService.task.taskStates.length;\r\n      }\r\n    });\r\n\r\n    return this.valueTask;\r\n  }\r\n\r\n  constructor(private taskService: TaskService) {}\r\n}\r\n","<h2 class=\"animated fadeIn fast\">Avance Del Proyecto</h2>\r\n\r\n<div class=\"barra-avance animated fadeIn fast\">\r\n    <p class=\"porcentaje\" [ngStyle]=\"{'width': valueFinal+'%' }\"></p>\r\n</div>","import Swal from 'sweetalert2';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n/* Services */\r\nimport { ProjectService } from '../../services/project.service';\r\nimport { LoginService } from '../../../auth/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-project-update',\r\n  templateUrl: './project-update.component.html',\r\n  styleUrls: ['./project-update.component.css', '../../css/pages.component.css'],\r\n})\r\nexport class ProjectUpdateComponent {\r\n  /*\r\n   * Update Project Form Variables\r\n   */\r\n  public formForma: FormGroup;\r\n  private formUpdateProjectSubmitted = false;\r\n\r\n  get titleProject(): string {\r\n    return this.loginService.projects.projectNames[this.indexProject];\r\n  }\r\n\r\n  get urlProject(): string {\r\n    return this.activatedRoute.snapshot.paramMap.get('projectUrl');\r\n  }\r\n\r\n  get idProject(): number {\r\n    // tslint:disable-next-line: radix\r\n    return parseInt(this.activatedRoute.snapshot.paramMap.get('projectId'));\r\n  }\r\n\r\n  get indexProject(): number {\r\n    // tslint:disable-next-line: radix\r\n    return parseInt(this.activatedRoute.snapshot.paramMap.get('indice'));\r\n  }\r\n\r\n  /*\r\n   * Coditionals DOM\r\n   */\r\n  public get conditionalNameHTML(): boolean {\r\n    return (\r\n      this.formForma.get('name').invalid && this.formForma.get('name').dirty\r\n    );\r\n  }\r\n\r\n  public get requiredNameHTML(): boolean {\r\n    return (\r\n      this.formUpdateProjectSubmitted &&\r\n      !this.formForma.get('name').dirty &&\r\n      !this.formForma.valid\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private projectService: ProjectService,\r\n    private router: Router\r\n  ) {\r\n    this.projectFormDataBuild();\r\n  }\r\n\r\n  /*\r\n   * Update Project Form Builder\r\n   */\r\n  private projectFormDataBuild(): void {\r\n    this.formForma = this.formBuilder.group({\r\n      name: [this.titleProject, [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update Project Form Send For Backend\r\n   */\r\n  public projectUpdateFormDataSaved(): void {\r\n    if (this.formForma.status === 'INVALID' || this.formForma.valid === false) {\r\n      this.formUpdateProjectSubmitted = true;\r\n      return;\r\n    }\r\n\r\n    /* Send Data For Backend, If Is Right! */\r\n    this.projectService\r\n      .updateProject(\r\n        this.formForma.value.name,\r\n        this.urlProject,\r\n        this.idProject,\r\n        this.indexProject\r\n      )\r\n      .subscribe(() => {\r\n        this.ShowAlert();\r\n        this.router.navigateByUrl('/dashboard');\r\n      });\r\n    // this.formForma.reset();\r\n  }\r\n\r\n  private ShowAlert(): void {\r\n    Swal.fire({\r\n      title: 'Actualizar Proyecto',\r\n      text: 'Proyecto Actualizado Exitosamente!',\r\n      icon: 'success',\r\n      confirmButtonColor: '#3085d6',\r\n      confirmButtonText: 'Ok!',\r\n    });\r\n  }\r\n}\r\n","<article class=\"article__form animated fadeIn fast\" id=\"article__form\">\r\n    <section class=\"section\">\r\n        <h2>Actualizar - {{ titleProject }}</h2>\r\n\r\n        <div class=\"section__project\">\r\n            <form autocomplete=\"off\" class=\"section__form main__form\" [formGroup]=\"formForma\" (ngSubmit)=\"projectUpdateFormDataSaved()\">\r\n                <input type=\"text\" formControlName=\"name\">\r\n                <small *ngIf=\"conditionalNameHTML\">Minimo 6 Caracteres</small>\r\n                <small *ngIf=\"requiredNameHTML\">Nombre Projecto Obligatorio</small>\r\n                <input class=\"input__personal\" type=\"submit\" value=\"Actualizar Proyecto\">\r\n            </form>\r\n        </div>\r\n    </section>\r\n</article>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css', '../css/pages.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"article__form animated fadeIn fast\">\r\n    <h2 class=\"article__title--projects\">Administrar Proyectos</h2>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\n\r\n/* Services */\r\nimport { ProjectService } from './services/project.service';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n  // public projectName:\r\n  constructor(private projectService: ProjectService) { \r\n\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n}\r\n","<div>\r\n    <app-header></app-header>\r\n\r\n    <main>\r\n        <article class=\"main__dashboard\" id=\"landing__page\">\r\n            <app-sidebar></app-sidebar>\r\n\r\n            <section>\r\n                <router-outlet></router-outlet>\r\n            </section>\r\n        </article>\r\n    </main>\r\n\r\n    <app-footer></app-footer>\r\n</div>","/* Modelo Que Me permite Tener Disponible Los Nombres\r\nDe Los Proyectos Creados En Todo El Proyecto UPTASK,\r\nCon Ayuda De Los Servicios, Por Que Los Servicios\r\nSon Singleton Y Eso Me Permite Que Al Modificar\r\nEste Arreglo De Nombres, Se Modifique Automaticamente\r\nEn Cualquier Lugar Donde Se Tenga Una Instancia\r\nDe Este Modelo, Que En teoria Se Instancia\r\nUna Sola Vez En Un Servicio, Pero Gracias\r\nA la Habilidad Singleton De Los Servicios, Puedo\r\nA puntar A La Misma Referencia De Memoria, Donde\r\nTenga Solicitado El Servicio Donde Se Instancio Este Modelo.\r\n*/\r\nexport class Project {\r\n  constructor(public projectIds: number[], public projectUrls: string[], public projectNames: string[]) { }\r\n}","/* Modelo Que Me permite Tener Disponible Las Propiedades\r\nDe Los Tareas Creados En Todo El Proyecto UPTASK,\r\nCon Ayuda De Los Servicios, Por Que Los Servicios\r\nSon Singleton Y Eso Me Permite Que Al Modificar\r\nEste Arreglo De Tareas, Se Modifique Automaticamente\r\nEn Cualquier Lugar Donde Se Tenga Una Instancia\r\nDe Este Modelo, Que En teoria Se Instancia\r\nUna Sola Vez En Un Servicio, Pero Gracias\r\nA la Habilidad Singleton De Los Servicios, Puedo\r\nA puntar A La Misma Referencia De Memoria, Donde\r\nTenga Solicitado El Servicio Donde Se Instancio Este Modelo.\r\n*/\r\nexport class Task {\r\n    constructor(public taskIds: number[], public taskNames: string[], public taskStates: number[], public projectId: number) { }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/* Guards */\r\nimport { AuthGuard } from '../guards/auth.guard';\r\n\r\n/* Components */\r\nimport { TasksComponent } from './tasks/tasks.component';\r\nimport { LandingPageComponent } from './landing-page.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ProjectUpdateComponent } from './components/project-update/project-update.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: LandingPageComponent, canActivate:[ AuthGuard ],\r\n  children: [\r\n      { path: '', component: DashboardComponent },\r\n      { path: 'projects', component: ProjectsComponent },\r\n      { path: 'tasks/:indice/:projectUrl/:projectId', component: TasksComponent },\r\n      { path: 'project/:indice/:projectUrl/:projectId', component: ProjectUpdateComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n  ]\r\n})\r\nexport class PagesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n/* Componets Module */\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n/* Components Pages */\r\nimport { TasksComponent } from './tasks/tasks.component';\r\nimport { LandingPageComponent } from './landing-page.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ProjectUpdateComponent } from './components/project-update/project-update.component';\r\nimport { ProgressComponent } from './components/progress/progress.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TasksComponent,\r\n    LandingPageComponent,\r\n    ProjectsComponent,\r\n    DashboardComponent,\r\n    ProjectUpdateComponent,\r\n    ProgressComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [ \r\n    TasksComponent,\r\n    LandingPageComponent,\r\n    ProjectsComponent,\r\n    DashboardComponent,\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { Router } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n/* Services */\r\nimport { ProjectService } from '../services/project.service';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['../css/pages.component.css'],\r\n})\r\nexport class ProjectsComponent {\r\n  /**\r\n   * Project Form Variables\r\n   */\r\n  public formForma: FormGroup;\r\n  private formNameProjectSubmitted = false;\r\n\r\n  /*\r\n   * Coditionals DOM\r\n   */\r\n  public get conditionalNameHTML(): boolean {\r\n    return (\r\n      this.formForma.get('name').invalid && this.formForma.get('name').dirty\r\n    );\r\n  }\r\n\r\n  public get requiredNameHTML(): boolean {\r\n    return (\r\n      this.formNameProjectSubmitted &&\r\n      !this.formForma.get('name').dirty &&\r\n      !this.formForma.valid\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private projectService: ProjectService,\r\n    private router: Router\r\n  ) {\r\n    this.projectFormDataBuild();\r\n  }\r\n\r\n  /**\r\n   * Project Form Build\r\n   */\r\n  private projectFormDataBuild(): void {\r\n    this.formForma = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Project Form Send For Backend\r\n   */\r\n  public projectFormDataSaved(): void {\r\n    if (\r\n      this.formForma.status === 'INVALID' ||\r\n      this.formForma.dirty === false ||\r\n      this.formForma.valid === false\r\n    ) {\r\n      this.formNameProjectSubmitted = true;\r\n      return;\r\n    }\r\n\r\n    /* Send Data For Backend, If Is Right! */\r\n    this.projectService.createProject(this.formForma.value.name).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl('/dashboard');\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n}\r\n","<article class=\"article__form animated fadeIn fast\" id=\"article__form\">\r\n    <section class=\"section\">\r\n        <h2>Nuevo Proyecto</h2>\r\n\r\n        <div class=\"section__project\">\r\n            <form autocomplete=\"off\" class=\"section__form main__form\" [formGroup]=\"formForma\" (ngSubmit)=\"projectFormDataSaved()\">\r\n                <input type=\"text\" formControlName=\"name\">\r\n                <small *ngIf=\"conditionalNameHTML\">Minimo 6 Caracteres</small>\r\n                <small *ngIf=\"requiredNameHTML\">Nombre Projecto Obligatorio</small>\r\n                <input type=\"submit\" value=\"Crear Proyecto\">\r\n            </form>\r\n        </div>\r\n    </section>\r\n</article>","import { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/* Interfaces */\r\nimport { IProject } from '../interfaces/project.interface';\r\n\r\n/* Services */\r\nimport { LoginService } from '../../auth/services/login.service';\r\n\r\n/* Variables De Entorno */\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProjectService {\r\n  private url: string = environment.baseUrl;\r\n\r\n  get token(): string {\r\n    return `Bearer ${localStorage.getItem('token') || ''}`;\r\n  }\r\n\r\n  constructor(private http: HttpClient, private loginService: LoginService) {}\r\n\r\n  /**\r\n   * Project Create\r\n   */\r\n  public createProject(name: IProject): Observable<object> {\r\n    return this.http\r\n      .post(\r\n        `${this.url}/project`,\r\n        { name },\r\n        {\r\n          headers: { Authorization: this.token },\r\n        }\r\n      )\r\n      .pipe(\r\n        tap((resp: any) => {\r\n          resp.projects.forEach((project) => {\r\n            // tslint:disable-next-line: no-shadowed-variable\r\n            const { id, name, url } = project;\r\n\r\n            this.loginService.projects.projectIds.push(id);\r\n            this.loginService.projects.projectUrls.push(url);\r\n            this.loginService.projects.projectNames.push(name);\r\n          });\r\n        }),\r\n        catchError(() => of(false))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Project Update\r\n   */\r\n  public updateProject(\r\n    name: string,\r\n    projectUrl: string,\r\n    projectId: number,\r\n    indice: number\r\n  ) {\r\n    return this.http\r\n      .put(\r\n        `${this.url}/project/${projectUrl}/${projectId}`,\r\n        { name },\r\n        {\r\n          headers: { Authorization: this.token },\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(() => {\r\n          this.loginService.projects.projectNames[indice] = name;\r\n        }),\r\n        catchError(() => of(false))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Project Delete\r\n   */\r\n  public deleteProject(\r\n    projectId: number,\r\n    projectUrl: string,\r\n    indice: number\r\n  ): Observable<any> {\r\n    return this.http\r\n      .delete(`${this.url}/project/${projectUrl}/${projectId}`, {\r\n        headers: { Authorization: this.token },\r\n      })\r\n      .pipe(\r\n        tap(() => {\r\n          this.loginService.projects.projectIds.splice(indice, 1);\r\n          this.loginService.projects.projectUrls.splice(indice, 1);\r\n          this.loginService.projects.projectNames.splice(indice, 1);\r\n        }),\r\n        catchError(() => of(false))\r\n      );\r\n  }\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n/* Interfaces */\r\nimport { ITask } from '../interfaces/task.interface';\r\n\r\n/* Model For All Project UPTASK */\r\nimport { Task } from '../models/task.model';\r\n\r\n/* Variables De Entorno */\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TaskService {\r\n  public task: Task;\r\n  private url: string = environment.baseUrl;\r\n\r\n  get token(): string {\r\n    return `Bearer ${localStorage.getItem('token') || ''}`;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Get Tasks\r\n   * LOGICA PARA UN SERVICIO SINGLETON Y OBTENER LAS TAREAS PARA TODO EL PROYECTO\r\n   */\r\n  public tasks(projectId: number): Observable<object> {\r\n    return this.http\r\n      .get(`${this.url}/tasks/${projectId}`, {\r\n        headers: { Authorization: this.token },\r\n      })\r\n      .pipe(\r\n        tap((resp: any) => {\r\n          let taskProjectId: number;\r\n          const arrayId: number[] = [];\r\n          const arrayName: string[] = [];\r\n          const arrayState: number[] = [];\r\n\r\n          resp.tasks.forEach((taskComplete) => {\r\n            const { id, task, state, project_id } = taskComplete;\r\n\r\n            arrayId.push(id);\r\n            arrayName.push(task);\r\n            arrayState.push(state);\r\n            taskProjectId = project_id;\r\n          });\r\n\r\n          this.task = new Task(arrayId, arrayName, arrayState, taskProjectId);\r\n        }),\r\n        catchError(() => of(false))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Task Create\r\n   * LOGICA PARA UN SERVICIO SINGLETON Y CREAR LAS TAREAS PARA TODO EL PROYECTO\r\n   */\r\n  public createTask(name: ITask, projectId: number): Observable<object> {\r\n    return this.http\r\n      .post(\r\n        `${this.url}/task/${projectId}`,\r\n        { name },\r\n        {\r\n          headers: { Authorization: this.token },\r\n        }\r\n      )\r\n      .pipe(\r\n        tap((res: any) => {\r\n          this.task.taskIds.length = 0;\r\n          this.task.taskNames.length = 0;\r\n          this.task.taskStates.length = 0;\r\n\r\n          const arrayTaskIds: number[] = [];\r\n          const arrayTaskNames: string[] = [];\r\n          const arrayTaskStates: number[] = [];\r\n\r\n          res.tasks.forEach((task) => {\r\n            arrayTaskIds.push(task.id);\r\n            arrayTaskNames.push(task.task);\r\n            arrayTaskStates.push(task.state);\r\n          });\r\n\r\n          this.task.taskIds = arrayTaskIds;\r\n          this.task.taskNames = arrayTaskNames;\r\n          this.task.taskStates = arrayTaskStates;\r\n        }),\r\n        catchError(() => of(false))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * update Task\r\n   */\r\n  public updateTask(taskId: number, index: number) {\r\n    return this.http\r\n      .patch(\r\n        `${this.url}/task/${taskId}`,\r\n        { body: '' },\r\n        {\r\n          headers: { Authorization: this.token },\r\n        }\r\n      )\r\n      .pipe(\r\n        tap(() => {\r\n          let state = 1;\r\n\r\n          if (this.task.taskStates[index] === 1) {\r\n            state = 0;\r\n          }\r\n\r\n          this.task.taskStates[index] = state;\r\n        }),\r\n        catchError(() => of(false))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Task Delete\r\n   * LOGICA PARA UN SERVICIO SINGLETON Y ELIMINAR LAS TAREAS PARA TODO EL PROYECTO\r\n   */\r\n  public deleteTask(taskId: number, indice: number): Observable<object> {\r\n    return this.http\r\n      .delete(`${this.url}/task/${taskId}`, {\r\n        headers: { Authorization: this.token },\r\n      })\r\n      .pipe(\r\n        tap(() => {\r\n          this.task.taskIds.splice(indice, 1);\r\n          this.task.taskNames.splice(indice, 1);\r\n          this.task.taskStates.splice(indice, 1);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import Swal from 'sweetalert2';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n/* Services */\r\nimport { TaskService } from '../services/task.service';\r\nimport { ProjectService } from '../services/project.service';\r\nimport { LoginService } from '../../auth/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css', '../css/pages.component.css'],\r\n})\r\nexport class TasksComponent {\r\n  /*\r\n   * Task Form Variables\r\n   */\r\n  public valueFinal: number;\r\n  public formForma: FormGroup;\r\n  private formNameTaskSubmitted = false;\r\n\r\n  get taskNames(): string[] {\r\n    return this.taskService.task?.taskNames;\r\n  }\r\n\r\n  get titleProject(): string[] {\r\n    return this.loginService.projects.projectNames;\r\n  }\r\n\r\n  get projectId(): number {\r\n    return this.loginService.projects.projectIds[this.indexProject];\r\n  }\r\n\r\n  get projectUrl(): string {\r\n    return this.loginService.projects.projectUrls[this.indexProject];\r\n  }\r\n\r\n  get indexProject(): number {\r\n    // tslint:disable-next-line: radix\r\n    return parseInt(this.activatedRoute.snapshot.paramMap.get('indice'));\r\n  }\r\n\r\n  /*\r\n   * Coditionals DOM\r\n   */\r\n  public get conditionalNameHTML(): boolean {\r\n    return (\r\n      this.formForma.get('name').invalid && this.formForma.get('name').dirty\r\n    );\r\n  }\r\n\r\n  public get requiredNameHTML(): boolean {\r\n    return (\r\n      this.formNameTaskSubmitted &&\r\n      !this.formForma.get('name').dirty &&\r\n      !this.formForma.valid\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public taskService: TaskService,\r\n    private formBuilder: FormBuilder,\r\n    private loginService: LoginService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private projectService: ProjectService\r\n  ) {\r\n    this.taskFormDataBuild();\r\n  }\r\n\r\n  /**\r\n   * Task Form Build\r\n   */\r\n  private taskFormDataBuild(): void {\r\n    this.formForma = this.formBuilder.group({\r\n      name: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Task Form Send For Backend\r\n   */\r\n  public taskFormDataSaved(): void {\r\n    if (\r\n      this.formForma.status === 'INVALID' ||\r\n      this.formForma.dirty === false ||\r\n      this.formForma.valid === false\r\n    ) {\r\n      this.formNameTaskSubmitted = true;\r\n      return;\r\n    }\r\n\r\n    /* Send Data For Backend, If Is Right! */\r\n    this.taskService\r\n      .createTask(this.formForma.value.name, this.projectId)\r\n      .subscribe();\r\n\r\n    this.formForma.reset();\r\n  }\r\n\r\n  /**\r\n   * State Update Task Backend\r\n   */\r\n  public updateTask(index: number) {\r\n    this.taskService\r\n      .updateTask(this.taskService.task.taskIds[index], index)\r\n      .subscribe();\r\n  }\r\n\r\n  /**\r\n   * Delete Task For Backend\r\n   */\r\n  public deleteTask(index: number): void {\r\n    Swal.fire({\r\n      title: 'Estas Seguro?',\r\n      text: 'Las Tareas Eliminadas No Se Pueden Recuperar!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Definitivamente!',\r\n      cancelButtonText: 'Cancelar',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.taskService\r\n          .deleteTask(this.taskService.task.taskIds[index], index)\r\n          .subscribe();\r\n\r\n        Swal.fire('Eliminado!', 'Tu Tarea Fue Eliminada.', 'success');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update Project For Backend\r\n   */\r\n  public updateProject(): void {\r\n    this.router.navigateByUrl(\r\n      `/dashboard/project/${this.indexProject}/${this.projectUrl}/${this.projectId}`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete Task For Backend\r\n   */\r\n  public deleteProject(): void {\r\n    Swal.fire({\r\n      title: 'Estas Seguro?',\r\n      text: 'Los Proyectos Eliminadas No Se Pueden Recuperar!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, Eliminar Definitivamente!',\r\n      cancelButtonText: 'Cancelar',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.projectService\r\n          .deleteProject(this.projectId, this.projectUrl, this.indexProject)\r\n          .subscribe(() => this.router.navigateByUrl('/dashboard'));\r\n\r\n        Swal.fire('Eliminado!', 'Tu Archivo Fue Eliminado.', 'success');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<article class=\"article__form animated fadeIn fast\" id=\"article__form\">\r\n    <section class=\"section\">\r\n        <h2> Tareas - {{ titleProject[indexProject] }} </h2>\r\n\r\n        <div class=\"section__project\">\r\n            <form autocomplete=\"off\" class=\"section__form main__form\" [formGroup]=\"formForma\" (ngSubmit)=\"taskFormDataSaved()\">\r\n                <input type=\"text\" formControlName=\"name\">\r\n                <small *ngIf=\"conditionalNameHTML\">Minimo 6 Caracteres</small>\r\n                <small *ngIf=\"requiredNameHTML\">Nombre Tarea Obligatoria</small>\r\n                <input type=\"submit\" value=\"Crear Tarea\">\r\n            </form>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"section__project section__task\">\r\n        <div id=\"before\" class=\"section__form\" *ngFor=\"let nameTask of taskNames; let i = index\">\r\n            <p> {{ nameTask }} <span> <i [style.color]=\"taskService.task.taskStates[i] === 1 ? 'var(--greenColor)' : 'var(--redColor)'\" (click)=\"updateTask(i)\" class=\"far fa-check-circle\"></i> <i (click)=\"deleteTask(i)\" class=\"fas fa-trash-alt\"></i> </span>                </p>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"section__project section__buttons\">\r\n        <section>\r\n            <app-progress></app-progress>\r\n        </section>\r\n\r\n        <section class=\"container__buttons\">\r\n            <div>\r\n                <a (click)=\"updateProject()\"><i class=\"far fa-edit\"></i> Actualizar Proyecto</a>\r\n            </div>\r\n\r\n            <div>\r\n                <a (click)=\"deleteProject()\"><i class=\"fas fa-trash-alt\"></i> Eliminar Proyecto</a>\r\n            </div>\r\n        </section>\r\n    </section>\r\n</article>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css'],\r\n})\r\nexport class FooterComponent {\r\n  private name: string;\r\n  private lastName: string;\r\n  private date: number;\r\n\r\n  constructor() {\r\n    this.name = 'Daniel Fernando';\r\n    this.lastName = 'Yepez Vélez';\r\n    this.date = new Date().getFullYear();\r\n  }\r\n\r\n  get Name() {\r\n    return this.name;\r\n  }\r\n\r\n  get LastName() {\r\n    return this.lastName;\r\n  }\r\n\r\n  get Date() {\r\n    return this.date;\r\n  }\r\n}\r\n","<footer class=\"footer animated fadeIn fast\">\r\n    <p class=\"footer__paragraph\">&copy; {{ Name }} {{ LastName }} - {{ Date }}</p>\r\n</footer>","import { Component } from '@angular/core';\r\n\r\n/* Services */\r\nimport { LoginService } from '../../auth/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent {\r\n  constructor(private loginService: LoginService) {}\r\n\r\n  public logout(): void {\r\n    this.loginService.logout();\r\n  }\r\n}\r\n","<header class=\"header animated fadeIn fast\">\r\n    <div class=\"header__container\">\r\n        <a [routerLink]=\"['/dashboard']\" class=\"header__figure--logo\">\r\n            <img class=\"header__logo\" src=\"./assets/image/logo.png\" alt=\"logoImage\">\r\n            <p class=\"header__paragraph\">UpTask - Administrador De Proyectos</p>\r\n        </a>\r\n\r\n        <nav>\r\n            <ul class=\"header__ul\">\r\n                <li (click)=\"logout()\"><a class=\"header__item\">Cerrar Sesion</a></li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n</header>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n/* Components */\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SidebarComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SidebarComponent,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n/* Services */\r\nimport { TaskService } from '../../pages/services/task.service';\r\nimport { LoginService } from '../../auth/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css'],\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  private landingPage: HTMLElement;\r\n  private asideContainer: HTMLElement;\r\n  private projectComplete: HTMLBodyElement;\r\n\r\n  get projectNames(): string[] {\r\n    return this.loginService.projects.projectNames;\r\n  }\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private taskService: TaskService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.asideContainer = document.querySelector('#aside');\r\n    this.landingPage = document.querySelector('#landing__page');\r\n    this.projectComplete = document.querySelector('#project__complete');\r\n\r\n    /* Project Complete New Width */\r\n    this.projectComplete.classList.add('body__menu--hidden');\r\n  }\r\n\r\n  public hiddenAside(): void {\r\n    if (this.asideContainer.classList.contains('aside__hidden')) {\r\n      /* Aside Hidden All */\r\n      this.asideContainer.className = 'aside';\r\n\r\n      /* Template Main Grid Modified */\r\n      this.landingPage.className = 'main__dashboard';\r\n\r\n      /* Project Complete New Width */\r\n      this.projectComplete.classList.add('body__menu--hidden');\r\n    } else {\r\n      /* Aside Hidden All */\r\n      this.asideContainer.className = 'aside__hidden';\r\n\r\n      /* Template Main Grid Modified */\r\n      this.landingPage.className = 'main__dashboard--hidden';\r\n\r\n      /* Project Complete New Width */\r\n      this.projectComplete.classList.remove('body__menu--hidden');\r\n    }\r\n  }\r\n\r\n  public showProject(indice: number) {\r\n    const projectId = this.loginService.projects.projectIds[indice];\r\n    const projectUrl = this.loginService.projects.projectUrls[indice];\r\n\r\n    this.taskService\r\n      .tasks(projectId)\r\n      .subscribe(() =>\r\n        this.router.navigateByUrl(\r\n          `/dashboard/tasks/${indice}/${projectUrl}/${projectId}`\r\n        )\r\n      );\r\n  }\r\n}\r\n","<div class=\"aside__global animated fadeIn fast\">\r\n    <aside class=\"aside\" id=\"aside\">\r\n        <div class=\"aside__bottom\">\r\n            <a [routerLink]=\"[ '/dashboard/projects']\"><i class=\"fas fa-plus\"></i> Nuevo Proyecto</a>\r\n        </div>\r\n\r\n        <section class=\"aside__projects\">\r\n            <h1>Proyectos</h1>\r\n\r\n            <section class=\"aside__list\">\r\n                <p *ngFor=\"let name of projectNames; let i = index \">\r\n                    <li>\r\n                        <a (click)=\"showProject(i)\">{{ name }}</a></li>\r\n                </p>\r\n            </section>\r\n        </section>\r\n    </aside>\r\n\r\n    <p class=\"aside__burger\"><i class=\"fas fa-bars\" (click)=\"hiddenAside()\"></i></p>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: 'http://localhost:3000/api',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}